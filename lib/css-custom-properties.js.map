{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap af661e0a8f3454bc5c85","webpack:///./src/utils.js","webpack:///./src/index.js"],"names":["isArray","object","Array","isString","string","isObject","forEach","method","prop","hasOwnProperty","set","property","value","startsWith","substring","isNumber","isNaN","formatResult","parseFloat","unprefixString","prefix","slice","length","prefixString","CssCustomProperties","variable","element","root","isValidName","undefined","styles","getComputedStyle","getPropertyValue","trimmedValue","trim","all","style","key","variableName","unprefix","get","getAll","collection","setProperty","unset","selector","document","querySelector","item","map","prefixed","unprefixed","name","getElement"],"mappings":"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","file":"css-custom-properties.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"css-custom-properties\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"css-custom-properties\"] = factory();\n\telse\n\t\troot[\"css-custom-properties\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap af661e0a8f3454bc5c85","export const isArray = object => object && Array.isArray(object);\n\nexport const isString = (string) => string && typeof string === 'string';\n\nexport const isObject = object => object && typeof object === 'object';\n\nexport const forEach = (object, method) => {\n  if (!isObject(object)) {\n    return;\n  }\n\n  for (let prop in object) {\n    if (object.hasOwnProperty(prop)) {\n      method(prop, object[prop]);\n    }\n  }\n};\n\nexport const set = (object, property, value) => {\n  if (!isObject(object)) {\n    return object;\n  }\n\n  object[property] = value;\n\n  return object;\n};\n\nexport const startsWith = (string, substring) => isString(string) && string.startsWith(substring);\n\nexport const isNumber = (string) => !isNaN(string) && string !== 'Infinity';\n\nexport const formatResult = (string) => isNumber(string) ? parseFloat(string, 10) : string;\n\nexport const unprefixString = (string, prefix) => string.startsWith(prefix) ? string.slice(prefix.length) : string;\n\nexport const prefixString = (string, prefix) => string.startsWith(prefix) ? string : `${prefix}${string}`;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js","// Libraries\nimport {forEach, formatResult, isObject, isString, isArray, prefixString, set, startsWith, unprefixString} from './utils';\n\nexport default class CssCustomProperties {\n\n  /* Getters */\n\n  static get root() {\n    return CssCustomProperties.getElement(':root');\n  }\n\n  /* API */\n\n  /**\n   * This method gets a CSS variable's value on a DOM element.\n   *\n   * @param  {String} variable      The CSS variable name.\n   * @param  {DOM Element} element  The DOM element to get the css variable from.\n   *                                Defaults to the global :root element.\n   * @return {*}                    The matched variable's value. Else undefined.\n   */\n  static get(variable, element = CssCustomProperties.root) {\n    if (!element || !CssCustomProperties.isValidName(variable)) {\n      return undefined;\n    }\n\n    const styles = getComputedStyle(element);\n    const value = styles.getPropertyValue(CssCustomProperties.prefix(variable));\n\n    const trimmedValue = value && value.trim();\n\n    return (trimmedValue && trimmedValue !== '') ? formatResult(trimmedValue) : undefined;\n  }\n\n  /**\n   * This method gets all CSS variables on a DOM element.\n   *\n   * @param  {DOM Element} element  The DOM element to get the css variables from.\n   *                                Defaults to the global :root element.\n   * @return {*}                    The collection of CSS variable-value pairs. Else undefined.\n   */\n  static getAll(element = CssCustomProperties.root) {\n    if (!element) {\n      return undefined;\n    }\n\n    const all = {};\n\n    forEach(element.style, (key, value) => {\n      if (startsWith(value, '--')) {\n        const variableName = value;\n\n        set(\n          all,\n          CssCustomProperties.unprefix(variableName),\n          CssCustomProperties.get(variableName, element)\n        );\n      }\n    });\n\n    return all;\n  }\n\n  /**\n   * This method gets all CSS variables on a DOM element. Like getAll(), but with '--' prefixed variable names.\n   *\n   * @param  {DOM Element} element  The DOM element to get the css variables from.\n   *                                Defaults to the global :root element.\n   * @return {*}                    The collection of CSS variable-value pairs. Else undefined.\n   */\n  static getAllPrefixed(element = CssCustomProperties.root) {\n    return CssCustomProperties.prefix(CssCustomProperties.getAll(element));\n  }\n\n  /**\n   * This method checks if a CSS variable exists on a DOM element.\n   *\n   * @param  {String} variable      The CSS variable name.\n   * @param  {DOM Element} element  The DOM element to check.\n   *                                Defaults to the global :root element.\n   * @return {Boolean}              True if CSS variable exists on element, else false.\n   */\n  static has(variable, element = CssCustomProperties.root) {\n    return !!CssCustomProperties.get(variable, element);\n  }\n\n  /**\n   * This method sets CSS variables on a DOM element.\n   *\n   * @param  {Object} collection    The collection of CSS variable-value pairs.\n   * @param  {DOM Element} element  The DOM element to apply the css variable to.\n   *                                Defaults to the global :root element.\n   * @return {*}                    The collection of CSS variable-value pairs. Else undefined.\n   */\n  static set(collection, element = CssCustomProperties.root) {\n    if (!element) {\n      return undefined;\n    }\n\n    if (!collection) {\n      return {};\n    }\n\n    const all = {};\n\n    forEach(collection, (key, value) => {\n      CssCustomProperties.setProperty(key, value, element);\n\n      set(\n        all,\n        CssCustomProperties.unprefix(key),\n        CssCustomProperties.get(key, element)\n      );\n    });\n\n    return all;\n  }\n\n  /**\n   * This method sets a CSS variable on a DOM element.\n   *\n   * @param  {String} variable      The CSS variable name.\n   * @param  {String} value         The CSS variable value.\n   * @param  {DOM Element} element  The DOM element to apply the css variable to.\n   *                                Defaults to the global :root element.\n   * @return {*}                    The value of the CSS variable. Else undefined.\n   */\n  static setProperty(variable, value, element = CssCustomProperties.root) {\n    if (!element || !CssCustomProperties.isValidName(variable)) {\n      return undefined;\n    }\n\n    element.style.setProperty(CssCustomProperties.prefix(variable), value);\n\n    return value;\n  }\n\n  /**\n   * This method removes a CSS variable from a DOM element.\n   *\n   * @param  {String} variable      The CSS variable name.\n   * @param  {DOM Element} element  The DOM element to remove the css variable from.\n   *                                Defaults to the global :root element.\n   * @return {*}                    The value of the removed CSS variable. Else undefined.\n   */\n  static unset(variable, element = CssCustomProperties.root) {\n    if (!element || !CssCustomProperties.isValidName(variable)) {\n      return undefined;\n    }\n\n    const value = CssCustomProperties.get(variable, element);\n\n    CssCustomProperties.set({\n      [variable]: null\n    }, element);\n\n    return value;\n  }\n\n  /**\n   * This method removes all CSS variables from a DOM element.\n   *\n   * @param  {DOM Element} element  The DOM element to remove the css variables from.\n   *                                Defaults to the global :root element.\n   * @return {*}                    The collection of removed CSS variable-value pairs. Else undefined.\n   */\n  static unsetAll(element = CssCustomProperties.root) {\n    if (!element) {\n      return undefined;\n    }\n\n    const all = CssCustomProperties.getAll(element);\n\n    forEach(all, (key, value) => {\n      CssCustomProperties.unset(key, element);\n    });\n\n    return all;\n  }\n\n  /* Helpers */\n\n  /**\n   * Get DOM element from selector.\n   *\n   * @param  {String} selector  The selector to match against.\n   * @return {DOM Element}      The matched element.\n   */\n  static getElement(selector) {\n    return document.querySelector(selector);\n  }\n\n  /**\n   * Add the \"--\" prefix if it doesn't already exists.\n   *\n   * @param  {String|Object|Array} item  The variable name or collection of variable names to prefix.\n   * @return {String|Object|Array}      The prefixed result.\n   */\n  static prefix(item) {\n    if (isString(item)) {\n      return prefixString(item, '--');\n    } else if (isArray(item)) {\n      return item.map(string => prefixString(string, '--'));\n    } else if (isObject(item)) {\n      const prefixed = {};\n\n      forEach(item, (key, value) => {\n        set(\n          prefixed,\n          prefixString(key, '--'),\n          value\n        );\n      });\n\n      return prefixed;\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Trim the \"--\" prefix, if it exists.\n   *\n   * @param  {String|Object|Array} item  The variable name or collection of variable names to trim.\n   * @return {String|Object|Array}      The trimmed result.\n   */\n  static unprefix(item) {\n    if (isString(item)) {\n      return unprefixString(item, '--');\n    } else if (isArray(item)) {\n      return item.map(string => unprefixString(string, '--'));\n    } else if (isObject(item)) {\n      const unprefixed = {};\n\n      forEach(item, (key, value) => {\n        set(\n          unprefixed,\n          unprefixString(key, '--'),\n          value\n        );\n      });\n\n      return unprefixed;\n    }\n    return undefined;\n  }\n\n  /**\n   * Checks if variable name is valid.\n   *\n   * @param  {String} name  The variable name to validate.\n   * @return {Boolean}      True if valid.\n   */\n  static isValidName(name) {\n    return isString(name);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js"],"sourceRoot":""}