{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 97cce6dc96ca4d68025e","webpack:///./src/utils.js","webpack:///./src/index.js"],"names":["isString","string","isObject","object","forEach","method","prop","hasOwnProperty","set","property","value","startsWith","substring","CssCustomProperties","variable","element","root","isValidName","undefined","styles","getComputedStyle","getPropertyValue","prefixVariableName","trimmedValue","trim","all","style","key","variableName","abbreviateVariableName","get","collection","setProperty","getAll","unset","selector","document","querySelector","name","slice","getElement"],"mappings":"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","file":"css-custom-properties.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"css-custom-properties\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"css-custom-properties\"] = factory();\n\telse\n\t\troot[\"css-custom-properties\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 97cce6dc96ca4d68025e","export const isString = (string) => string && typeof string === 'string';\n\nexport const isObject = object => object && typeof object === 'object';\n\nexport const forEach = (object, method) => {\n  if (!isObject(object)) {\n    return;\n  }\n\n  for (let prop in object) {\n    if (object.hasOwnProperty(prop)) {\n      method(prop, object[prop]);\n    }\n  }\n};\n\nexport const set = (object, property, value) => {\n  if (!isObject(object)) {\n    return object;\n  }\n\n  object[property] = value;\n\n  return object;\n};\n\nexport const startsWith = (string, substring) => isString(string) && string.startsWith(substring);\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js","// Libraries\nimport {forEach, isString, set, startsWith} from './utils';\n\nexport default class CssCustomProperties {\n\n  /* Getters */\n\n  static get root() {\n    return CssCustomProperties.getElement(':root');\n  }\n\n  /* API */\n\n  /**\n   * This method gets a CSS variable's value on a DOM element.\n   *\n   * @param  {String} variable      The CSS variable name.\n   * @param  {DOM Element} element  The DOM element to get the css variable from.\n   *                                Defaults to the global :root element.\n   * @return {*}                    The matched variable's value. Else undefined.\n   */\n  static get(variable, element = CssCustomProperties.root) {\n    if (!element || !CssCustomProperties.isValidName(variable)) {\n      return undefined;\n    }\n\n    const styles = getComputedStyle(element);\n    const value = styles.getPropertyValue(CssCustomProperties.prefixVariableName(variable));\n\n    const trimmedValue = value && value.trim();\n\n    return trimmedValue && trimmedValue !== '' ? trimmedValue : undefined;\n  }\n\n  /**\n   * This method gets all CSS variables on a DOM element.\n   *\n   * @param  {DOM Element} element  The DOM element to get the css variables from.\n   *                                Defaults to the global :root element.\n   * @return {*}                    The collection of CSS variable-value pairs. Else undefined.\n   */\n  static getAll(element = CssCustomProperties.root) {\n    if (!element) {\n      return undefined;\n    }\n\n    const all = {};\n\n    forEach(element.style, (key, value) => {\n      if (startsWith(value, '--')) {\n        const variableName = value;\n\n        set(\n          all,\n          CssCustomProperties.abbreviateVariableName(variableName),\n          CssCustomProperties.get(variableName, element)\n        );\n      }\n    });\n\n    return all;\n  }\n\n  /**\n   * This method checks if a CSS variable exists on a DOM element.\n   *\n   * @param  {String} variable      The CSS variable name.\n   * @param  {DOM Element} element  The DOM element to check.\n   *                                Defaults to the global :root element.\n   * @return {Boolean}              True if CSS variable exists on element, else false.\n   */\n  static has(variable, element = CssCustomProperties.root) {\n    return !!CssCustomProperties.get(variable, element);\n  }\n\n  /**\n   * This method sets CSS variables on a DOM element.\n   *\n   * @param  {Object} collection    The collection of CSS variable-value pairs.\n   * @param  {DOM Element} element  The DOM element to apply the css variable to.\n   *                                Defaults to the global :root element.\n   * @return {*}                    The collection of CSS variable-value pairs. Else undefined.\n   */\n  static set(collection, element = CssCustomProperties.root) {\n    if (!element) {\n      return undefined;\n    }\n\n    if (!collection) {\n      return {};\n    }\n\n    const all = {};\n\n    forEach(collection, (key, value) => {\n      CssCustomProperties.setProperty(key, value, element);\n\n      set(\n        all,\n        CssCustomProperties.abbreviateVariableName(key),\n        CssCustomProperties.get(key, element)\n      );\n    });\n\n    return all;\n  }\n\n  /**\n   * This method sets a CSS variable on a DOM element.\n   *\n   * @param  {String} variable      The CSS variable name.\n   * @param  {String} value         The CSS variable value.\n   * @param  {DOM Element} element  The DOM element to apply the css variable to.\n   *                                Defaults to the global :root element.\n   * @return {*}                    The value of the CSS variable. Else undefined.\n   */\n  static setProperty(variable, value, element = CssCustomProperties.root) {\n    if (!element || !CssCustomProperties.isValidName(variable)) {\n      return undefined;\n    }\n\n    element.style.setProperty(CssCustomProperties.prefixVariableName(variable), value);\n\n    return value;\n  }\n\n  /**\n   * This method removes a CSS variable from a DOM element.\n   *\n   * @param  {String} variable      The CSS variable name.\n   * @param  {DOM Element} element  The DOM element to remove the css variable from.\n   *                                Defaults to the global :root element.\n   * @return {*}                    The value of the removed CSS variable. Else undefined.\n   */\n  static unset(variable, element = CssCustomProperties.root) {\n    if (!element || !CssCustomProperties.isValidName(variable)) {\n      return undefined;\n    }\n\n    const value = CssCustomProperties.get(variable, element);\n\n    CssCustomProperties.set({\n      [variable]: null\n    }, element);\n\n    return value;\n  }\n\n  /**\n   * This method removes all CSS variables from a DOM element.\n   *\n   * @param  {DOM Element} element  The DOM element to remove the css variables from.\n   *                                Defaults to the global :root element.\n   * @return {*}                    The collection of removed CSS variable-value pairs. Else undefined.\n   */\n  static unsetAll(element = CssCustomProperties.root) {\n    if (!element) {\n      return undefined;\n    }\n\n    const all = CssCustomProperties.getAll(element);\n\n    forEach(all, (key, value) => {\n      CssCustomProperties.unset(key, element);\n    });\n\n    return all;\n  }\n\n  /* Helpers */\n\n  /**\n   * Get DOM element from selector.\n   *\n   * @param  {String} selector  The selector to match against.\n   * @return {DOM Element}      The matched element.\n   */\n  static getElement(selector) {\n    return document.querySelector(selector);\n  }\n\n  /**\n   * Trim the \"--\" prefix on a string, if it exists.\n   *\n   * @param  {String} name  The variable name to trim.\n   * @return {String}       The trimmed variable name.\n   */\n  static abbreviateVariableName(name = '') {\n    return name.startsWith('--') ? name.slice(2) : name;\n  }\n\n  /**\n   * Add the \"--\" prefix on a string, if it is missing.\n   *\n   * @param  {String} name  The variable name to prefix.\n   * @return {String}       The prefixed variable name.\n   */\n  static prefixVariableName(name = '') {\n    return name.startsWith('--') ? name : `--${name}`;\n  }\n\n  /**\n   * Checks if variable name is valid.\n   *\n   * @param  {String} name  The variable name to validate.\n   * @return {Boolean}      True if valid.\n   */\n  static isValidName(name) {\n    return isString(name);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js"],"sourceRoot":""}